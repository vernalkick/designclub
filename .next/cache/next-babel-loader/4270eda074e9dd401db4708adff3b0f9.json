{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kevinclark/Developer/designclub/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kevinclark/Developer/designclub/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kevinclark/Developer/designclub/components/store.js\",\n    _this = this;\n\nimport { GetStaticProps } from 'next';\n\nvar Store = function Store(_ref) {\n  var hello = _ref.hello,\n      posts = _ref.posts;\n  console.log(hello);\n  console.log('potato');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello world fun\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this), posts && posts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Store;\nexport function getStaticProps() {\n  return _getStaticProps.apply(this, arguments);\n}\n\nfunction _getStaticProps() {\n  _getStaticProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, posts;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('http://jsonplaceholder.typicode.com/posts');\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            posts = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: {\n                hello: 'blah',\n                posts: res\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getStaticProps.apply(this, arguments);\n}\n\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["/Users/kevinclark/Developer/designclub/components/store.js"],"names":["GetStaticProps","Store","hello","posts","console","log","map","post","getStaticProps","fetch","res","json","props"],"mappings":";;;;;;;AAAA,SAASA,cAAT,QAA+B,MAA/B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAoB;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGF,KAAK,IAAIA,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI;AAAA,0BACtB;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,eADsB;AAAA,KAAd,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAZD;;KAAMN,K;AAcN,gBAAsBO,cAAtB;AAAA;AAAA;;;6EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGaC,KAAK,CAAC,2CAAD,CAHlB;;AAAA;AAGCC,YAAAA,GAHD;AAAA;AAAA,mBAKeA,GAAG,CAACC,IAAJ,EALf;;AAAA;AAKCR,YAAAA,KALD;AAAA,6CASE;AACLS,cAAAA,KAAK,EAAE;AACLV,gBAAAA,KAAK,EAAE,MADF;AAELC,gBAAAA,KAAK,EAAEO;AAFF;AADF,aATF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAiBP,eAAeT,KAAf","sourcesContent":["import { GetStaticProps } from 'next'\n\nconst Store = ({hello, posts}) => {\n  console.log(hello)\n  console.log('potato')\n  \n  return (\n    <div>\n      <p>Hello world fun</p>\n      {posts && posts.map(post =>\n        <p>{post}</p> \n      )}\n    </div>\n  ) \n}\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const res = await fetch('http://jsonplaceholder.typicode.com/posts')\n  // const res = await fetch('https://ottawa-design-club.myshopify.com/products.json')\n  const posts = await res.json()\n\n  // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n  return {\n    props: {\n      hello: 'blah',\n      posts: res,\n    },\n  }\n}\n\nexport default Store"]},"metadata":{},"sourceType":"module"}