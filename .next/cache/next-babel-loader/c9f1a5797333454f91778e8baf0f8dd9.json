{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kevinclark/Developer/designclub/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kevinclark/Developer/designclub/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kevinclark/Developer/designclub/components/store.js\";\nimport { GetStaticProps } from 'next';\n\nfunction Store(_ref) {\n  var _this = this;\n\n  var posts = _ref.posts;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: posts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n} // const Store = ({hello, posts}) => {\n//   console.log(hello)\n//   console.log('potato')\n//   \n//   return (\n//     <div>\n//       <p>Hello world fun</p>\n//       {posts && posts.map(post =>\n//         <p>{post}</p> \n//       )}\n//     </div>\n//   ) \n// }\n\n\n_c = Store;\nexport function getStaticProps() {\n  return _getStaticProps.apply(this, arguments);\n}\n\nfunction _getStaticProps() {\n  _getStaticProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, posts;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('http://jsonplaceholder.typicode.com/posts');\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            posts = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: {\n                hello: 'blah',\n                posts: res\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getStaticProps.apply(this, arguments);\n}\n\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["/Users/kevinclark/Developer/designclub/components/store.js"],"names":["GetStaticProps","Store","posts","map","post","title","getStaticProps","fetch","res","json","props","hello"],"mappings":";;;;AAAA,SAASA,cAAT,QAA+B,MAA/B;;AAEA,SAASC,KAAT,OAA0B;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;AACxB,sBACE;AAAA,cACGA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,0BACT;AAAA,kBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,eADS;AAAA,KAAV;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KArBSJ,K;AAuBT,gBAAsBK,cAAtB;AAAA;AAAA;;;6EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGaC,KAAK,CAAC,2CAAD,CAHlB;;AAAA;AAGCC,YAAAA,GAHD;AAAA;AAAA,mBAKeA,GAAG,CAACC,IAAJ,EALf;;AAAA;AAKCP,YAAAA,KALD;AAAA,6CASE;AACLQ,cAAAA,KAAK,EAAE;AACLC,gBAAAA,KAAK,EAAE,MADF;AAELT,gBAAAA,KAAK,EAAEM;AAFF;AADF,aATF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAiBP,eAAeP,KAAf","sourcesContent":["import { GetStaticProps } from 'next'\n\nfunction Store({ posts }) {\n  return (\n    <ul>\n      {posts.map((post) => (\n        <li>{post.title}</li>\n      ))}\n    </ul>\n  )\n}\n// const Store = ({hello, posts}) => {\n//   console.log(hello)\n//   console.log('potato')\n//   \n//   return (\n//     <div>\n//       <p>Hello world fun</p>\n//       {posts && posts.map(post =>\n//         <p>{post}</p> \n//       )}\n//     </div>\n//   ) \n// }\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const res = await fetch('http://jsonplaceholder.typicode.com/posts')\n  // const res = await fetch('https://ottawa-design-club.myshopify.com/products.json')\n  const posts = await res.json()\n\n  // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n  return {\n    props: {\n      hello: 'blah',\n      posts: res,\n    },\n  }\n}\n\nexport default Store"]},"metadata":{},"sourceType":"module"}